Уважаемая комиссия, добрый день!

Меня зовут Безуглый Виталий,я студент группы ПИ-20б, и я представляю вам свой дипломный проект - чат-мессенджер, разработанный с использованием технологий Golang, HTML, CSS, JavaScript.

СЛ СЛАЙД

Целью моего проекта было создание удобного и функционального чат-мессенджера, который позволит пользователям обмениваться сообщениями в режиме реального времени. Я стремился разработать приложение, которое будет легко масштабироваться и обеспечивать высокую производительность.

CЛ СЛАЙД

Аналогов моего проекта сейчас очень много. Стоит рассмотреть сильные и слабые стороны популярных мессендеров.
преимущества WhatsApp это Децентрализированность.
+ Добавление вложений.
недостатки:
- Устаревший дизайн.
- Невозможность удалить файл без упоминания.

преимущества Wechat это  Монополист на рынке Китая.
+ Собственный протокол безопасности.
недостатки
- «Закрытость» чата для резидентов других стран помимо континентального Китая.


преимущества Telegram +Веб-версия и возможность использования с нескольких устройств.
недостатки: 
- Спам-рассылки.
- Реклама спонсоров в пользовательских каналах.

Отличие моего чат-мессенджера от таких крупных платформ, как WhatsApp, WeChat и Telegram, заключается в нескольких ключевых аспектах, которые могут сделать его привлекательным для определенных категорий пользователей и приложений:

СЛ СЛАЙД

- **Конфиденциальность**: Повышенный уровень конфиденциальности, поскольку данные не передаются сторонним сервисам и хранятся на защищенных серверах заказчика.
- **Работа в закрытых сетях**: Поддержка работы в закрытых корпоративных сетях, что снижает риск утечки данных.
- **Масштабирование**: Возможность настройки масштабирования приложения в зависимости от потребностей конкретной организации.
- **Реклама** Полное отсутствие рекламы улучшает пользовательский опыт и не отвлекает пользователей от основной функции приложения.

СЛ СЛАЙД

Для реализации проекта я использовал следующие технологии:

1. для Backend:
- **Golang**: Я выбрал Go за его высокую производительность и простоту в написании многопоточных приложений. Этот язык программирования хоть и молодой но является очень популярным для разработки серверной части сайтов. Язык по сути является слиянием С++ и python. Позволяет разработчикам писать такой же простой код ,как и на python имея производительность сопоставимую с с++. Будущее веб разработки стоит именно за Golang.
- **Echo**: Этот веб-фреймворк для Golang обеспечивает простоту в создании своего сервера , что было ключевым для разработки моего мессенджера. Набор функционала позволил реализовать TLS шифрование и кэширование встроенными средствами. Для отправки запроса к серверу происходит цепочка действий изображенная на слайде.

СЛ СЛАЙД

Все запросы от клиента(браузера) поступают именно в handler написанный на echo. Из handler запрос перенаправляется в функцию-обработчик. Обработчик в свою очередь обращается к базе данных. После выполнения всех преобразований браузер получает новую html разметку- это ответ обработчика.

СЛ СЛАЙД

На слайде изображена диаграмма прецедентов. Рассматривается взаимодействие двух пользователей и сервера. Обмен сообщениями происходит по цепочке клиент-сервер-клиент.

СЛ СЛАЙД

На слайде изображена диаграмма состояний сообщения в системе от момента ее написания до момента записи в базу данных. Модель сообщения после записи уничтожается и клиент готов принять от пользователя новое сообщение.

СЛ СЛАЙД

На слайде изображена диаграмма компонентов программного продукта. Все реализации вынесены в модули и представляют собой отдельные, связанные друг с другом компоненты системы

СЛ СЛАЙД

2. **Frontend**:
- **HTML и CSS**: Эти технологии использовались для создания структуры и стилей веб-страниц. HTML 5 и CSS 3 давно устоявшийся стандарт создания сайтов,который до сих пор остается актуальным.
- **JavaScript**: Я использовал JavaScript для обеспечения динамичного взаимодействия пользователя с приложением. Все визуальные анимации были созданы с помощью него.
- **jQuery**: Библиотека jQuery помогла упростить манипуляции с DOM и обработку событий на стороне клиента, тем самым сократив код JavaScript.

СЛ СЛАЙД

- **Ajax**: Благодаря Ajax я реализовал асинхронные запросы к серверу, что позволило обновлять данные без перезагрузки страницы. Эта технология построена на jQuery и дает возможность создавать динамические приложения без лишних сложностей с разработкой и потерь производительности.

3. **База данных**:
- **MariaDB**: Для хранения данных о пользователях и сообщениях я использовал реляционную базу данных MariaDB. Это аналог MySQL с открытым исходным кодом. Это позволило мне обеспечить надежность и быстродействие при обработке запросов. Именно MariaDB отлично оптимизирована для работы с веб приложениями.


СЛ СЛАЙД

**Функциональность**

Мой чат-мессенджер включает в себя следующие основные функции:

 **Регистрация и авторизация пользователей**: Пользователи могут создавать учетные записи и входить в систему с помощью безопасной аутентификации JWT. Вход на сайт реализован путем JWT токена в cookie браузера. По нему пользователь идентифицируется на сайте и может продолжить работу.
При регистрации пользователя средствами golang логотип сжимается до маленьких размеров,чем сильно экономит место на сервере . Сжатие изображения в среднем уменьшает размер файла в 1000 раз(с 3 мегабайт до 3 килобайт).

СЛ СЛАЙД


 **Отправка и получение сообщений**: Полученные сообщения отображаются в режиме реального времени, благодаря использованию AJAX технологии. AJAX предоставляет возможность средствами jQuery выполнить обновление контента на экране без перезагрузки страницы. Это экономит время пользователя и добавляет удобство пользования. 
Отправка сообщений реализована стандартными средствами HTML.

СЛ СЛАЙД

 **Избранные ** Сообщение можно сохранить в избранные и получить быстрый доступ к ним. Сообщения в избранном могут быть от разных получателей ,также туда можно сохранить и свои сообщения.


СЛ СЛАЙД

**Поиск по пользователям**: Реализована возможность поиска по всем пользователям для легкого нахождения нового собеседника. Также пользователи , с которыми уже был диалог отображаются в списке по умолчанию.Реализован счётчик непрочитанных сообщений возле иконки пользователя.

СЛ СЛАЙД

Потенциал развития:

    Рост рынка удаленной работы и  дистанционного обучения.
    Внедрение AI для умных ответов, анализ настроений, автоматических переводов и чат-ботов.
    Улучшенные методы шифрования данных.

СЛ СЛАЙД

    Создание мессенджеров для профессионалов, студентов и геймеров.

СЛ СЛАЙД

    Интеграция с облачными сервисами и социальными сетями.

СЛ СЛАЙД


**Заключение**
Разработка этого проекта позволила мне углубить свои знания в области веб-разработки и освоить современные технологии. Я уверен, что мой чат-мессенджер имеет потенциал для дальнейшего развития и может быть полезен для различных пользовательских сценариев.

СЛ СЛАЙД


Благодарю вас за внимание и готов ответить на ваши вопросы. 
